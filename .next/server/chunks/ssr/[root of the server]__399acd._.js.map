{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aakansh/Documents/Git/Digisoul-Dashboard/components/dashboard-profile.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react';\n\ninterface SoulPoint {\n  name: string;\n  points: number;\n  connected: boolean;\n}\n\ninterface DashboardProfileProps {\n  name: string\n  walletId: string\n  multiplier: number\n  avatarUrl: string\n}\n\nexport function DashboardProfile({ \n  name, \n  walletId, \n  multiplier, \n  avatarUrl \n}: DashboardProfileProps) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedName, setEditedName] = useState(name);\n  const [soulPoints, setSoulPoints] = useState<SoulPoint[]>([]);\n  const [connectedAddress, setConnectedAddress] = useState<string>(walletId);\n\n  useEffect(() => {\n    // Get connected wallet address\n    const getAddress = async () => {\n      if (typeof window.ethereum !== 'undefined') {\n        try {\n          const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n          if (accounts[0]) {\n            setConnectedAddress(accounts[0]);\n          }\n        } catch (error) {\n          console.error('Error fetching wallet address:', error);\n        }\n      }\n    };\n\n    getAddress();\n\n    // Listen for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', function (accounts: string[]) {\n        if (accounts[0]) {\n          setConnectedAddress(accounts[0]);\n        }\n      });\n    }\n\n    // Listen for soul points updates from the DashboardTabs component\n    const handleSoulPointsUpdate = (event: CustomEvent<{ points: SoulPoint[] }>) => {\n      setSoulPoints(event.detail.points);\n    };\n\n    window.addEventListener('soulPointsUpdate', handleSoulPointsUpdate as EventListener);\n\n    return () => {\n      window.removeEventListener('soulPointsUpdate', handleSoulPointsUpdate as EventListener);\n    };\n  }, []);\n\n  const handleEditProfile = () => {\n    if (isEditing) {\n      // Save the changes\n      // Here you would typically make an API call to update the profile\n      setIsEditing(false);\n    } else {\n      setIsEditing(true);\n    }\n  };\n\n  const copyWalletId = async (walletId: string) => {\n    try {\n      await navigator.clipboard.writeText(walletId);\n      // You could add a toast notification here\n      alert('Wallet ID copied to clipboard!');\n    } catch (err) {\n      console.error('Failed to copy wallet ID:', err);\n    }\n  };\n\n  return (\n    <div className=\"rounded-2xl bg-[#060709] p-6\" id='myClasses'>\n      <div className=\"flex items-start justify-between mb-6\">\n        <div className=\"relative\">\n          <img\n            src={avatarUrl}\n            alt=\"Profile\"\n            className=\"w-24 h-24 rounded-full\"\n          />\n        </div>\n        <button \n          className={`px-4 py-2 text-sm ${\n            isEditing \n              ? 'bg-green-500/20 text-green-500' \n              : 'bg-[#1c1d29] hover:bg-[#2a2b3d]'\n          } rounded-lg transition-colors`}\n          onClick={handleEditProfile}\n        >\n          {isEditing ? 'Save profile' : 'Edit profile'}\n        </button>\n      </div>\n      \n      <div className=\"space-y-4\">\n        <div>\n          {isEditing ? (\n            <input\n              type=\"text\"\n              value={editedName}\n              onChange={(e) => setEditedName(e.target.value)}\n              className=\"text-2xl font-bold bg-[#1c1d29] rounded px-2 py-1 w-full\"\n            />\n          ) : (\n            <h2 className=\"text-2xl font-bold\">{editedName}</h2>\n          )}\n          <p className=\"text-gray-400 flex items-center gap-2\">\n            {connectedAddress}\n            <button \n              className=\"hover:text-gray-300\"\n              onClick={() => copyWalletId(connectedAddress)}\n              title=\"Copy wallet ID\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n              </svg>\n            </button>\n          </p>\n        </div>\n        \n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-lg font-medium\">Soul Points</span>\n            <div className=\"flex items-center gap-2 text-blue-400\">\n              <span>Multiplier</span>\n              <span className=\"font-bold\">{multiplier}x</span>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            {soulPoints.filter(point => point.connected).map((point) => (\n              <div \n                key={point.name}\n                className=\"flex items-center justify-between p-2 rounded bg-[#1c1d29]\"\n              >\n                <span className=\"text-white\">{point.name}</span>\n                <span className=\"font-medium text-green-500\">+{point.points}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n  \n  "],"names":[],"mappings":"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"}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aakansh/Documents/Git/Digisoul-Dashboard/components/dasboard-tabs.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\n\ninterface SocialConnection {\n  id: string\n  name: string\n  icon: string\n  description: string\n  connected: boolean\n  soulPoints: number\n  url: string\n  category: string\n  verificationRequired?: boolean\n  verificationData?: {\n    type: string\n    message: string\n    score?: number\n    lastDigits?: string\n    placeholder?: string\n  }\n}\n\nconst TABS = [\n  { id: 'credit', label: 'Credit' },\n  { id: 'on-chain', label: 'On-chain Activities' },\n  { id: 'social', label: 'Social' },\n  { id: 'identity', label: 'Identity' },\n  { id: 'gaming', label: 'Gaming' },\n  { id: 'legal', label: 'Legal Identity' },\n]\n\nconst INITIAL_SOCIAL_CONNECTIONS: SocialConnection[] = [\n  // Credit Category\n  {\n    id: 'creditScore',\n    name: 'Credit Score',\n    icon: 'üí≥',\n    description: 'Connect your traditional credit score.',\n    connected: false,\n    soulPoints: 200,\n    url: 'https://credit.example.com/connect',\n    category: 'credit'\n  },\n  {\n    id: 'creditKarma',\n    name: 'Credit Karma',\n    icon: 'üìä',\n    description: 'Link your Credit Karma account.',\n    connected: false,\n    soulPoints: 150,\n    url: 'https://creditkarma.example.com/connect',\n    category: 'credit'\n  },\n  // On-chain Activities\n  {\n    id: 'ethereumWallet',\n    name: 'Ethereum Wallet',\n    icon: '‚ü†',\n    description: 'Connect your Ethereum wallet activity.',\n    connected: false,\n    soulPoints: 180,\n    url: 'https://ethereum.example.com/connect',\n    category: 'on-chain'\n  },\n  {\n    id: 'defiScore',\n    name: 'DeFi Score',\n    icon: 'üè¶',\n    description: 'Link your DeFi protocol interactions.',\n    connected: false,\n    soulPoints: 160,\n    url: 'https://defi.example.com/connect',\n    category: 'on-chain'\n  },\n  // Social Category\n  {\n    id: 'x',\n    name: 'X',\n    icon: 'ùïè',\n    description: 'Connect to X to verify your social media presence.',\n    connected: false,\n    soulPoints: 100,\n    url: 'https://x.com/oauth',\n    category: 'social',\n    verificationRequired: true,\n    verificationData: {\n      type: 'username',\n      message: 'Verify X Account',\n      placeholder: '@username'\n    }\n  },\n  {\n    id: 'linkedin',\n    name: 'LinkedIn',\n    icon: 'üíº',\n    description: 'Verify your professional network.',\n    connected: false,\n    soulPoints: 120,\n    url: 'https://linkedin.com/oauth',\n    category: 'social'\n  },\n  {\n    id: 'google',\n    name: 'Google',\n    icon: 'G',\n    description: 'Connect your Google account.',\n    connected: false,\n    soulPoints: 80,\n    url: 'https://accounts.google.com/oauth',\n    category: 'social'\n  },\n  // Identity Category\n  {\n    id: 'sibilScore',\n    name: 'Sibil Score',\n    icon: 'üìä',\n    description: 'Connect your Sibil Score to boost your reputation.',\n    connected: false,\n    soulPoints: 150,\n    url: 'https://sibil.example.com/connect',\n    category: 'identity',\n    verificationRequired: true,\n    verificationData: {\n      type: 'score',\n      message: 'Your Sibil Score',\n      score: 750\n    }\n  },\n  {\n    id: 'brightid',\n    name: 'BrightID',\n    icon: 'üåü',\n    description: 'Verify your unique human identity.',\n    connected: false,\n    soulPoints: 140,\n    url: 'https://brightid.org/connect',\n    category: 'identity'\n  },\n  // Gaming Category\n  {\n    id: 'steam',\n    name: 'Steam',\n    icon: 'üéÆ',\n    description: 'Connect your Steam gaming profile.',\n    connected: false,\n    soulPoints: 90,\n    url: 'https://steam.example.com/connect',\n    category: 'gaming'\n  },\n  {\n    id: 'xbox',\n    name: 'Xbox',\n    icon: 'üéØ',\n    description: 'Link your Xbox gaming achievements.',\n    connected: false,\n    soulPoints: 80,\n    url: 'https://xbox.example.com/connect',\n    category: 'gaming'\n  },\n  // Legal Identity\n  {\n    id: 'mAdhar',\n    name: 'mAdhar',\n    icon: 'üÜî',\n    description: 'Verify your identity with mAdhar.',\n    connected: false,\n    soulPoints: 200,\n    url: 'https://madhar.example.com/verify',\n    category: 'legal',\n    verificationRequired: true,\n    verificationData: {\n      type: 'aadhar',\n      message: 'Verify Aadhar',\n      lastDigits: '4321'\n    }\n  },\n  {\n    id: 'passport',\n    name: 'Passport Verification',\n    icon: 'üìò',\n    description: 'Verify your passport credentials.',\n    connected: false,\n    soulPoints: 180,\n    url: 'https://passport.example.com/verify',\n    category: 'legal'\n  }\n]\n\nexport function DashboardTabs() {\n  const [activeTab, setActiveTab] = useState('credit')\n  const [connections, setConnections] = useState<SocialConnection[]>(INITIAL_SOCIAL_CONNECTIONS)\n\n  // Emit soul points information whenever connections change\n  useEffect(() => {\n    const soulPointsInfo = connections.map(conn => ({\n      name: conn.name,\n      points: conn.soulPoints,\n      connected: conn.connected\n    }));\n\n    window.dispatchEvent(new CustomEvent('soulPointsUpdate', { \n      detail: { points: soulPointsInfo }\n    }));\n  }, [connections]);\n\n  const handleConnection = async (connectionId: string) => {\n    const connection = connections.find(c => c.id === connectionId)\n    if (!connection) return\n\n    if (connection.connected) {\n      // Handle disconnection\n      setConnections(prev => prev.map(conn => \n        conn.id === connectionId ? { ...conn, connected: false } : conn\n      ))\n      return\n    }\n\n    // Check if MetaMask is installed\n    if (typeof window.ethereum === 'undefined') {\n      alert('Please install MetaMask to connect services!')\n      return\n    }\n\n    // Show verification page if required\n    if (connection.verificationRequired) {\n      const getServiceStyles = (id: string) => {\n        switch (id) {\n          case 'x':\n            return {\n              background: '#000000',\n              buttonColor: '#1d9bf0',\n              fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif'\n            }\n          case 'google':\n            return {\n              background: '#ffffff',\n              buttonColor: '#1a73e8',\n              fontFamily: 'Roboto, arial, sans-serif'\n            }\n          case 'sibilScore':\n            return {\n              background: 'linear-gradient(135deg, #1e3c72 0%, #2a5298 100%)',\n              buttonColor: '#4ade80',\n              fontFamily: 'system-ui, -apple-system, sans-serif'\n            }\n          case 'mAdhar':\n            return {\n              background: 'linear-gradient(135deg, #FF6B6B 0%, #556270 100%)',\n              buttonColor: '#ffd700',\n              fontFamily: 'system-ui, -apple-system, sans-serif'\n            }\n          default:\n            return {\n              background: '#0a0b14',\n              buttonColor: '#22c55e',\n              fontFamily: 'system-ui, -apple-system, sans-serif'\n            }\n        }\n      }\n\n      const styles = getServiceStyles(connection.id)\n      const verificationPage = `\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <title>Verify ${connection.name}</title>\n            <style>\n              body {\n                margin: 0;\n                padding: 0;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                min-height: 100vh;\n                background: ${styles.background};\n                color: ${connection.id === 'google' ? '#202124' : 'white'};\n                font-family: ${styles.fontFamily};\n              }\n              .container {\n                background: ${connection.id === 'x' ? '#000000' : 'rgba(255,255,255,0.1)'};\n                border: 1px solid ${connection.id === 'x' ? '#333333' : 'rgba(255,255,255,0.2)'};\n                padding: 2rem;\n                border-radius: 1rem;\n                max-width: 400px;\n                width: 90%;\n                text-align: center;\n              }\n              .title {\n                font-size: 1.5rem;\n                margin-bottom: 1rem;\n                color: ${connection.id === 'google' ? '#202124' : 'white'};\n              }\n              .info {\n                font-size: ${connection.id === 'mAdhar' ? '2rem' : '1.5rem'};\n                color: ${styles.buttonColor};\n                margin: 1.5rem 0;\n                ${connection.id === 'mAdhar' ? 'font-family: monospace; letter-spacing: 2px;' : ''}\n              }\n              .message {\n                opacity: 0.8;\n                margin-bottom: 1.5rem;\n              }\n              .buttons {\n                display: flex;\n                flex-direction: column;\n                gap: 0.5rem;\n              }\n              button {\n                width: 100%;\n                padding: 0.75rem;\n                border: none;\n                border-radius: 0.5rem;\n                cursor: pointer;\n                font-size: 1rem;\n                transition: all 0.2s;\n              }\n              .confirm {\n                background: ${styles.buttonColor};\n                color: ${connection.id === 'mAdhar' ? 'black' : 'white'};\n              }\n              .cancel {\n                background: transparent;\n                border: 1px solid ${connection.id === 'x' ? '#333333' : 'rgba(255,255,255,0.2)'};\n                color: ${connection.id === 'google' ? styles.buttonColor : 'white'};\n              }\n              button:hover {\n                opacity: 0.9;\n              }\n            </style>\n          </head>\n          <body>\n            <div class=\"container\">\n              ${getVerificationContent(connection)}\n            </div>\n            <script>\n              document.querySelector('.confirm')?.addEventListener('click', () => {\n                window.opener.postMessage({\n                  type: 'verification',\n                  connectionId: '${connection.id}',\n                  confirmed: true\n                }, '*');\n              });\n              \n              document.querySelector('.cancel')?.addEventListener('click', () => {\n                window.opener.postMessage({\n                  type: 'verification',\n                  connectionId: '${connection.id}',\n                  confirmed: false\n                }, '*');\n                window.close();\n              });\n            </script>\n          </body>\n        </html>\n      `\n\n      const width = 500\n      const height = 400\n      const left = window.screenX + (window.outerWidth - width) / 2\n      const top = window.screenY + (window.outerHeight - height) / 2\n\n      const verificationWindow = window.open(\n        'about:blank',\n        `Verify ${connection.name}`,\n        `width=${width},height=${height},left=${left},top=${top}`\n      )\n\n      if (verificationWindow) {\n        verificationWindow.document.write(verificationPage)\n\n        // Handle verification response\n        const handleMessage = (event: MessageEvent) => {\n          if (event.data.type === 'verification' && event.data.connectionId === connection.id) {\n            window.removeEventListener('message', handleMessage)\n            if (event.data.confirmed) {\n              verificationWindow.close()\n              proceedWithConnection(connection)\n            }\n          }\n        }\n\n        window.addEventListener('message', handleMessage)\n      }\n    } else {\n      proceedWithConnection(connection)\n    }\n  }\n\n  const getVerificationContent = (connection: SocialConnection) => {\n    if (!connection.verificationData) return ''\n\n    switch (connection.verificationData.type) {\n      case 'score':\n        return `\n          <h2 class=\"title\">Your Sibil Score</h2>\n          <div class=\"info\">${connection.verificationData.score}</div>\n          <p class=\"message\">Would you like to connect this score to your profile?</p>\n          <div class=\"buttons\">\n            <button class=\"confirm\">Continue with Sibil</button>\n            <button class=\"cancel\">Cancel</button>\n          </div>\n        `\n      case 'username':\n        return `\n          <img src=\"https://about.twitter.com/content/dam/about-twitter/x/large-x-logo.png.twimg.1920.png\" \n               alt=\"X logo\" \n               style=\"width: 40px; height: 40px; margin-bottom: 1rem;\">\n          <h2 class=\"title\">Sign in to X</h2>\n          <div class=\"info\">@johndoe</div>\n          <p class=\"message\">Confirm your X account to continue</p>\n          <div class=\"buttons\">\n            <button class=\"confirm\">Continue with X</button>\n            <button class=\"cancel\">Not you?</button>\n          </div>\n        `\n      case 'aadhar':\n        return `\n          <h2 class=\"title\">Verify with mAadhar</h2>\n          <div class=\"info\">XXXX XXXX ${connection.verificationData.lastDigits}</div>\n          <p class=\"message\">Confirm your Aadhar number to continue</p>\n          <div class=\"buttons\">\n            <button class=\"confirm\">Verify Identity</button>\n            <button class=\"cancel\">Cancel</button>\n          </div>\n        `\n      default:\n        return ''\n    }\n  }\n\n  const proceedWithConnection = async (connection: SocialConnection) => {\n    try {\n      console.log('Requesting MetaMask connection...')\n      \n      // Request account access without chain restriction\n      const provider = window.ethereum\n      \n      // Now request account access\n      console.log('Requesting account access...')\n      const accounts = await provider.request({\n        method: 'eth_requestAccounts',\n      })\n\n      if (!accounts || accounts.length === 0) {\n        throw new Error('No accounts returned from MetaMask')\n      }\n\n      // Get current network for logging\n      const chainId = await provider.request({ method: 'eth_chainId' })\n      console.log('MetaMask connected:', accounts[0], 'on chain:', chainId)\n\n      // Create a mock connection page\n      const mockPage = `\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <title>Connecting to ${connection.name}</title>\n            <style>\n              body {\n                font-family: Arial, sans-serif;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                height: 100vh;\n                margin: 0;\n                background: #0a0b14;\n                color: white;\n              }\n              .loader {\n                border: 4px solid #1c1d29;\n                border-top: 4px solid #22c55e;\n                border-radius: 50%;\n                width: 50px;\n                height: 50px;\n                animation: spin 1s linear infinite;\n                margin-bottom: 20px;\n              }\n              @keyframes spin {\n                0% { transform: rotate(0deg); }\n                100% { transform: rotate(360deg); }\n              }\n              .success {\n                color: #22c55e;\n                text-align: center;\n              }\n              .steps {\n                margin: 20px 0;\n                text-align: left;\n                width: 80%;\n                max-width: 400px;\n              }\n              .step {\n                margin: 10px 0;\n                display: flex;\n                align-items: center;\n                gap: 10px;\n              }\n              .step.completed {\n                color: #22c55e;\n              }\n              .check {\n                font-size: 1.2em;\n              }\n            </style>\n          </head>\n          <body>\n            <div class=\"loader\"></div>\n            <p>Connecting to ${connection.name}...</p>\n            <div class=\"steps\">\n              <div class=\"step\" id=\"step1\">\n                <span class=\"check\">‚úì</span>\n                <span class=\"completed\">MetaMask connected</span>\n              </div>\n              <div class=\"step\" id=\"step2\">\n                <span class=\"check\">‚≠ï</span>\n                <span>Initializing connection...</span>\n              </div>\n              <div class=\"step\" id=\"step3\">\n                <span class=\"check\">‚≠ï</span>\n                <span>Minting verification token...</span>\n              </div>\n            </div>\n          </body>\n        </html>\n      `\n\n      // Open connection window\n      const width = 500\n      const height = 600\n      const left = window.screenX + (window.outerWidth - width) / 2\n      const top = window.screenY + (window.outerHeight - height) / 2\n\n      const connectionWindow = window.open(\n        'about:blank',\n        `Connect ${connection.name}`,\n        `width=${width},height=${height},left=${left},top=${top}`\n      )\n\n      if (connectionWindow) {\n        // Write the mock page content\n        connectionWindow.document.write(mockPage)\n        \n        // Step 2: Initialize\n        setTimeout(() => {\n          const step2 = connectionWindow?.document.getElementById('step2')\n          if (step2) {\n            step2.innerHTML = `\n              <span class=\"check\">‚úì</span>\n              <span class=\"completed\">Connection initialized</span>\n            `\n          }\n\n          // Step 3: Mint token\n          setTimeout(async () => {\n            try {\n              // Simulate a token mint transaction\n              const transactionParameters = {\n                to: accounts[0],\n                from: accounts[0],\n                value: '0x0',\n                data: '0x', // This would normally be the mint function call\n              }\n\n              await window.ethereum.request({\n                method: 'eth_sendTransaction',\n                params: [transactionParameters],\n              })\n\n              const step3 = connectionWindow?.document.getElementById('step3')\n              if (step3) {\n                step3.innerHTML = `\n                  <span class=\"check\">‚úì</span>\n                  <span class=\"completed\">Verification token minted</span>\n                `\n              }\n\n              // Show final success message\n              setTimeout(() => {\n                if (connectionWindow?.document?.body) {\n                  connectionWindow.document.body.innerHTML = `\n                    <div class=\"success\">\n                      <h2>‚úì Connected Successfully!</h2>\n                      <p>You've earned ${connection.soulPoints} Soul Points</p>\n                      <p>Verification token has been minted to your wallet</p>\n                      <p>This window will close automatically...</p>\n                    </div>\n                  `\n                }\n\n                // Update connection state\n                setConnections(prev => prev.map(conn => \n                  conn.id === connection.id ? { ...conn, connected: true } : conn\n                ))\n\n                // Close window after showing success\n                setTimeout(() => connectionWindow?.close(), 2000)\n              }, 1000)\n\n            } catch (mintError: unknown) {\n              const errorMessage = mintError instanceof Error ? mintError.message : 'Unknown error'\n              if (connectionWindow?.document?.body) {\n                connectionWindow.document.body.innerHTML = `\n                  <div style=\"color: #ef4444; text-align: center;\">\n                    <h2>‚ùå Transaction Failed</h2>\n                    <p>Failed to mint verification token: ${errorMessage}</p>\n                    <p>Please try again later.</p>\n                  </div>\n                `\n              }\n              setTimeout(() => connectionWindow?.close(), 3000)\n            }\n          }, 1000)\n        }, 1000)\n      }\n    } catch (error: unknown) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error'\n      alert(`Connection failed: ${errorMessage}. Please try again.`)\n    }\n  }\n\n  return (\n    <div className=\"rounded-2xl bg-[#060709] p-6\">\n      <div className=\"flex gap-2 overflow-x-auto pb-4\">\n        {TABS.map((tab) => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveTab(tab.id)}\n            className={`px-4 py-2 rounded-lg whitespace-nowrap transition-colors ${\n              activeTab === tab.id\n                ? 'bg-white/10 text-white'\n                : 'text-gray-400 hover:text-white hover:bg-white/5'\n            }`}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2\">\n        {connections\n          .filter(connection => connection.category === activeTab)\n          .map((connection) => (\n          <div id=\"myClasses\" \n            key={connection.id}\n            className=\"p-4 rounded-xl bg-[#1c1d29] flex items-center justify-between\"\n          >\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-10 h-10 rounded-full bg-[#14151f] flex items-center justify-center text-xl\">\n                {connection.icon}\n              </div>\n              <div>\n                <h4 className=\"font-medium\">{connection.name}</h4>\n                <p className=\"text-sm text-gray-400\">{connection.description}</p>\n                <p className=\"text-sm text-yellow-500\">+{connection.soulPoints} Soul Points</p>\n              </div>\n            </div>\n            <button\n              onClick={() => handleConnection(connection.id)}\n              className={`px-4 py-2 rounded-lg text-sm transition-colors ${\n                connection.connected\n                  ? 'bg-green-500/20 text-green-500 hover:bg-green-500/30'\n                  : 'bg-white/5 text-white hover:bg-white/10'\n              }`}\n            >\n              {connection.connected ? 'Connected' : 'Connect'}\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAuBA,MAAM,OAAO;IACX;QAAE,IAAI;QAAU,OAAO;IAAS;IAChC;QAAE,IAAI;QAAY,OAAO;IAAsB;IAC/C;QAAE,IAAI;QAAU,OAAO;IAAS;IAChC;QAAE,IAAI;QAAY,OAAO;IAAW;IACpC;QAAE,IAAI;QAAU,OAAO;IAAS;IAChC;QAAE,IAAI;QAAS,OAAO;IAAiB;CACxC;AAED,MAAM,6BAAiD;IACrD,kBAAkB;IAClB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;IACZ;IACA,sBAAsB;IACtB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;IACZ;IACA,kBAAkB;IAClB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;QACV,sBAAsB;QACtB,kBAAkB;YAChB,MAAM;YACN,SAAS;YACT,aAAa;QACf;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;IACZ;IACA,oBAAoB;IACpB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;QACV,sBAAsB;QACtB,kBAAkB;YAChB,MAAM;YACN,SAAS;YACT,OAAO;QACT;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;IACZ;IACA,kBAAkB;IAClB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;IACZ;IACA,iBAAiB;IACjB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;QACV,sBAAsB;QACtB,kBAAkB;YAChB,MAAM;YACN,SAAS;YACT,YAAY;QACd;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,aAAa;QACb,WAAW;QACX,YAAY;QACZ,KAAK;QACL,UAAU;IACZ;CACD;AAEM,SAAS;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IAEnE,2DAA2D;IAC3D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB,YAAY,GAAG,CAAC,CAAA,OAAQ,CAAC;gBAC9C,MAAM,KAAK,IAAI;gBACf,QAAQ,KAAK,UAAU;gBACvB,WAAW,KAAK,SAAS;YAC3B,CAAC;QAED,OAAO,aAAa,CAAC,IAAI,YAAY,oBAAoB;YACvD,QAAQ;gBAAE,QAAQ;YAAe;QACnC;IACF,GAAG;QAAC;KAAY;IAEhB,MAAM,mBAAmB,OAAO;QAC9B,MAAM,aAAa,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAClD,IAAI,CAAC,YAAY;QAEjB,IAAI,WAAW,SAAS,EAAE;YACxB,uBAAuB;YACvB,eAAe,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,OAC9B,KAAK,EAAE,KAAK,eAAe;wBAAE,GAAG,IAAI;wBAAE,WAAW;oBAAM,IAAI;YAE7D;QACF;QAEA,iCAAiC;QACjC,IAAI,OAAO,OAAO,QAAQ,KAAK,aAAa;YAC1C,MAAM;YACN;QACF;QAEA,qCAAqC;QACrC,IAAI,WAAW,oBAAoB,EAAE;YACnC,MAAM,mBAAmB,CAAC;gBACxB,OAAQ;oBACN,KAAK;wBACH,OAAO;4BACL,YAAY;4BACZ,aAAa;4BACb,YAAY;wBACd;oBACF,KAAK;wBACH,OAAO;4BACL,YAAY;4BACZ,aAAa;4BACb,YAAY;wBACd;oBACF,KAAK;wBACH,OAAO;4BACL,YAAY;4BACZ,aAAa;4BACb,YAAY;wBACd;oBACF,KAAK;wBACH,OAAO;4BACL,YAAY;4BACZ,aAAa;4BACb,YAAY;wBACd;oBACF;wBACE,OAAO;4BACL,YAAY;4BACZ,aAAa;4BACb,YAAY;wBACd;gBACJ;YACF;YAEA,MAAM,SAAS,iBAAiB,WAAW,EAAE;YAC7C,MAAM,mBAAmB,CAAC;;;;0BAIN,EAAE,WAAW,IAAI,CAAC;;;;;;;;;4BAShB,EAAE,OAAO,UAAU,CAAC;uBACzB,EAAE,WAAW,EAAE,KAAK,WAAW,YAAY,QAAQ;6BAC7C,EAAE,OAAO,UAAU,CAAC;;;4BAGrB,EAAE,WAAW,EAAE,KAAK,MAAM,YAAY,wBAAwB;kCACxD,EAAE,WAAW,EAAE,KAAK,MAAM,YAAY,wBAAwB;;;;;;;;;;uBAUzE,EAAE,WAAW,EAAE,KAAK,WAAW,YAAY,QAAQ;;;2BAG/C,EAAE,WAAW,EAAE,KAAK,WAAW,SAAS,SAAS;uBACrD,EAAE,OAAO,WAAW,CAAC;;gBAE5B,EAAE,WAAW,EAAE,KAAK,WAAW,iDAAiD,GAAG;;;;;;;;;;;;;;;;;;;;;4BAqBvE,EAAE,OAAO,WAAW,CAAC;uBAC1B,EAAE,WAAW,EAAE,KAAK,WAAW,UAAU,QAAQ;;;;kCAItC,EAAE,WAAW,EAAE,KAAK,MAAM,YAAY,wBAAwB;uBACzE,EAAE,WAAW,EAAE,KAAK,WAAW,OAAO,WAAW,GAAG,QAAQ;;;;;;;;;cASrE,EAAE,uBAAuB,YAAY;;;;;;iCAMlB,EAAE,WAAW,EAAE,CAAC;;;;;;;;iCAQhB,EAAE,WAAW,EAAE,CAAC;;;;;;;;MAQ3C,CAAC;YAED,MAAM,QAAQ;YACd,MAAM,SAAS;YACf,MAAM,OAAO,OAAO,OAAO,GAAG,CAAC,OAAO,UAAU,GAAG,KAAK,IAAI;YAC5D,MAAM,MAAM,OAAO,OAAO,GAAG,CAAC,OAAO,WAAW,GAAG,MAAM,IAAI;YAE7D,MAAM,qBAAqB,OAAO,IAAI,CACpC,eACA,CAAC,OAAO,EAAE,WAAW,IAAI,EAAE,EAC3B,CAAC,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,EAAE,KAAK;YAG3D,IAAI,oBAAoB;gBACtB,mBAAmB,QAAQ,CAAC,KAAK,CAAC;gBAElC,+BAA+B;gBAC/B,MAAM,gBAAgB,CAAC;oBACrB,IAAI,MAAM,IAAI,CAAC,IAAI,KAAK,kBAAkB,MAAM,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE,EAAE;wBACnF,OAAO,mBAAmB,CAAC,WAAW;wBACtC,IAAI,MAAM,IAAI,CAAC,SAAS,EAAE;4BACxB,mBAAmB,KAAK;4BACxB,sBAAsB;wBACxB;oBACF;gBACF;gBAEA,OAAO,gBAAgB,CAAC,WAAW;YACrC;QACF,OAAO;YACL,sBAAsB;QACxB;IACF;IAEA,MAAM,yBAAyB,CAAC;QAC9B,IAAI,CAAC,WAAW,gBAAgB,EAAE,OAAO;QAEzC,OAAQ,WAAW,gBAAgB,CAAC,IAAI;YACtC,KAAK;gBACH,OAAO,CAAC;;4BAEY,EAAE,WAAW,gBAAgB,CAAC,KAAK,CAAC;;;;;;QAMxD,CAAC;YACH,KAAK;gBACH,OAAO,CAAC;;;;;;;;;;;QAWR,CAAC;YACH,KAAK;gBACH,OAAO,CAAC;;sCAEsB,EAAE,WAAW,gBAAgB,CAAC,UAAU,CAAC;;;;;;QAMvE,CAAC;YACH;gBACE,OAAO;QACX;IACF;IAEA,MAAM,wBAAwB,OAAO;QACnC,IAAI;YACF,QAAQ,GAAG,CAAC;YAEZ,mDAAmD;YACnD,MAAM,WAAW,OAAO,QAAQ;YAEhC,6BAA6B;YAC7B,QAAQ,GAAG,CAAC;YACZ,MAAM,WAAW,MAAM,SAAS,OAAO,CAAC;gBACtC,QAAQ;YACV;YAEA,IAAI,CAAC,YAAY,SAAS,MAAM,KAAK,GAAG;gBACtC,MAAM,IAAI,MAAM;YAClB;YAEA,kCAAkC;YAClC,MAAM,UAAU,MAAM,SAAS,OAAO,CAAC;gBAAE,QAAQ;YAAc;YAC/D,QAAQ,GAAG,CAAC,uBAAuB,QAAQ,CAAC,EAAE,EAAE,aAAa;YAE7D,gCAAgC;YAChC,MAAM,WAAW,CAAC;;;;iCAIS,EAAE,WAAW,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAoDtB,EAAE,WAAW,IAAI,CAAC;;;;;;;;;;;;;;;;;MAiBzC,CAAC;YAED,yBAAyB;YACzB,MAAM,QAAQ;YACd,MAAM,SAAS;YACf,MAAM,OAAO,OAAO,OAAO,GAAG,CAAC,OAAO,UAAU,GAAG,KAAK,IAAI;YAC5D,MAAM,MAAM,OAAO,OAAO,GAAG,CAAC,OAAO,WAAW,GAAG,MAAM,IAAI;YAE7D,MAAM,mBAAmB,OAAO,IAAI,CAClC,eACA,CAAC,QAAQ,EAAE,WAAW,IAAI,EAAE,EAC5B,CAAC,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,MAAM,EAAE,KAAK,KAAK,EAAE,KAAK;YAG3D,IAAI,kBAAkB;gBACpB,8BAA8B;gBAC9B,iBAAiB,QAAQ,CAAC,KAAK,CAAC;gBAEhC,qBAAqB;gBACrB,WAAW;oBACT,MAAM,QAAQ,kBAAkB,SAAS,eAAe;oBACxD,IAAI,OAAO;wBACT,MAAM,SAAS,GAAG,CAAC;;;YAGnB,CAAC;oBACH;oBAEA,qBAAqB;oBACrB,WAAW;wBACT,IAAI;4BACF,oCAAoC;4BACpC,MAAM,wBAAwB;gCAC5B,IAAI,QAAQ,CAAC,EAAE;gCACf,MAAM,QAAQ,CAAC,EAAE;gCACjB,OAAO;gCACP,MAAM;4BACR;4BAEA,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;gCAC5B,QAAQ;gCACR,QAAQ;oCAAC;iCAAsB;4BACjC;4BAEA,MAAM,QAAQ,kBAAkB,SAAS,eAAe;4BACxD,IAAI,OAAO;gCACT,MAAM,SAAS,GAAG,CAAC;;;gBAGnB,CAAC;4BACH;4BAEA,6BAA6B;4BAC7B,WAAW;gCACT,IAAI,kBAAkB,UAAU,MAAM;oCACpC,iBAAiB,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC;;;uCAGvB,EAAE,WAAW,UAAU,CAAC;;;;kBAI7C,CAAC;gCACH;gCAEA,0BAA0B;gCAC1B,eAAe,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,OAC9B,KAAK,EAAE,KAAK,WAAW,EAAE,GAAG;4CAAE,GAAG,IAAI;4CAAE,WAAW;wCAAK,IAAI;gCAG7D,qCAAqC;gCACrC,WAAW,IAAM,kBAAkB,SAAS;4BAC9C,GAAG;wBAEL,EAAE,OAAO,WAAoB;4BAC3B,MAAM,eAAe,qBAAqB,QAAQ,UAAU,OAAO,GAAG;4BACtE,IAAI,kBAAkB,UAAU,MAAM;gCACpC,iBAAiB,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC;;;0DAGF,EAAE,aAAa;;;gBAGzD,CAAC;4BACH;4BACA,WAAW,IAAM,kBAAkB,SAAS;wBAC9C;oBACF,GAAG;gBACL,GAAG;YACL;QACF,EAAE,OAAO,OAAgB;YACvB,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC9D,MAAM,CAAC,mBAAmB,EAAE,aAAa,mBAAmB,CAAC;QAC/D;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACZ,KAAK,GAAG,CAAC,CAAC,oBACT,8OAAC;wBAEC,SAAS,IAAM,aAAa,IAAI,EAAE;wBAClC,WAAW,CAAC,yDAAyD,EACnE,cAAc,IAAI,EAAE,GAChB,2BACA,mDACJ;kCAED,IAAI,KAAK;uBARL,IAAI,EAAE;;;;;;;;;;0BAajB,8OAAC;gBAAI,WAAU;0BACZ,YACE,MAAM,CAAC,CAAA,aAAc,WAAW,QAAQ,KAAK,WAC7C,GAAG,CAAC,CAAC,2BACN,8OAAC;wBAAI,IAAG;wBAEN,WAAU;;0CAEV,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACZ,WAAW,IAAI;;;;;;kDAElB,8OAAC;;0DACC,8OAAC;gDAAG,WAAU;0DAAe,WAAW,IAAI;;;;;;0DAC5C,8OAAC;gDAAE,WAAU;0DAAyB,WAAW,WAAW;;;;;;0DAC5D,8OAAC;gDAAE,WAAU;;oDAA0B;oDAAE,WAAW,UAAU;oDAAC;;;;;;;;;;;;;;;;;;;0CAGnE,8OAAC;gCACC,SAAS,IAAM,iBAAiB,WAAW,EAAE;gCAC7C,WAAW,CAAC,+CAA+C,EACzD,WAAW,SAAS,GAChB,yDACA,2CACJ;0CAED,WAAW,SAAS,GAAG,cAAc;;;;;;;uBArBnC,WAAW,EAAE;;;;;;;;;;;;;;;;AA4B9B"}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 996, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aakansh/Documents/Git/Digisoul-Dashboard/components/solid-score.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\n\ninterface SolidScoreProps {\n    score: number\n    maxScore: number\n    increase: number\n  }\n  \n  interface SoulPoint {\n    name: string;\n    points: number;\n    connected: boolean;\n  }\n  \n  export function SolidScore({ score, maxScore, increase }: SolidScoreProps) {\n    const [showInfo, setShowInfo] = useState(false)\n    const [currentScore, setCurrentScore] = useState(0)\n    const maxPossibleScore = 1750 // Total possible points from all connections (sum of all soulPoints)\n  \n    useEffect(() => {\n      // Listen for soul points updates\n      const handleSoulPointsUpdate = (event: CustomEvent<{ points: SoulPoint[] }>) => {\n        const totalPoints = event.detail.points.reduce((total, point) => \n          total + (point.connected ? point.points : 0), 0\n        );\n  \n        // Animate the score change\n        let current = currentScore;\n        const animate = () => {\n          if (current < totalPoints) {\n            current += 1;\n            setCurrentScore(current);\n            requestAnimationFrame(animate);\n          } else if (current > totalPoints) {\n            current -= 1;\n            setCurrentScore(current);\n            requestAnimationFrame(animate);\n          }\n        };\n        requestAnimationFrame(animate);\n      };\n  \n      window.addEventListener('soulPointsUpdate', handleSoulPointsUpdate as EventListener);\n  \n      return () => {\n        window.removeEventListener('soulPointsUpdate', handleSoulPointsUpdate as EventListener);\n      };\n    }, [currentScore]);\n  \n    const percentage = (currentScore / maxPossibleScore) * 100;\n  \n    return (\n      <div className=\"rounded-2xl bg-[#060709] p-6\" id='myClasses'>\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-medium\">Soul Score</h3>\n          <button \n            className=\"text-gray-400 hover:text-gray-300\"\n            onClick={() => setShowInfo(!showInfo)}\n            title=\"Show information about Soul Score\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </button>\n        </div>\n        \n        {showInfo && (\n          <div className=\"mb-4 p-3 bg-[#1c1d29] rounded-lg text-sm text-gray-300\">\n            Your Soul Score represents your overall reputation and trustworthiness in the ecosystem. \n            Connect services to increase your score up to a maximum of {maxPossibleScore} points.\n          </div>\n        )}\n  \n        <div className=\"flex items-end gap-4 mb-4\">\n          <div className=\"text-5xl font-bold text-[#22c55e]\">{currentScore}</div>\n          <div className=\"text-sm text-gray-400 mb-2\">/{maxPossibleScore}</div>\n        </div>\n        \n        <div className=\"relative h-2 bg-[#1c1d29] rounded-full overflow-hidden\">\n          <div \n            className=\"absolute left-0 top-0 h-full bg-[#22c55e] transition-all duration-300\"\n            style={{ width: `${percentage}%` }}\n          />\n        </div>\n      </div>\n    )\n  }\n  \n  "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAgBS,SAAS,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAmB;IACvE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,mBAAmB,KAAK,qEAAqE;;IAEnG,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,iCAAiC;QACjC,MAAM,yBAAyB,CAAC;YAC9B,MAAM,cAAc,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,QACrD,QAAQ,CAAC,MAAM,SAAS,GAAG,MAAM,MAAM,GAAG,CAAC,GAAG;YAGhD,2BAA2B;YAC3B,IAAI,UAAU;YACd,MAAM,UAAU;gBACd,IAAI,UAAU,aAAa;oBACzB,WAAW;oBACX,gBAAgB;oBAChB,sBAAsB;gBACxB,OAAO,IAAI,UAAU,aAAa;oBAChC,WAAW;oBACX,gBAAgB;oBAChB,sBAAsB;gBACxB;YACF;YACA,sBAAsB;QACxB;QAEA,OAAO,gBAAgB,CAAC,oBAAoB;QAE5C,OAAO;YACL,OAAO,mBAAmB,CAAC,oBAAoB;QACjD;IACF,GAAG;QAAC;KAAa;IAEjB,MAAM,aAAa,AAAC,eAAe,mBAAoB;IAEvD,qBACE,8OAAC;QAAI,WAAU;QAA+B,IAAG;;0BAC/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsB;;;;;;kCACpC,8OAAC;wBACC,WAAU;wBACV,SAAS,IAAM,YAAY,CAAC;wBAC5B,OAAM;kCAEN,cAAA,8OAAC;4BAAI,WAAU;4BAAU,MAAK;4BAAO,QAAO;4BAAe,SAAQ;sCACjE,cAAA,8OAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;YAK1E,0BACC,8OAAC;gBAAI,WAAU;;oBAAyD;oBAEV;oBAAiB;;;;;;;0BAIjF,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAqC;;;;;;kCACpD,8OAAC;wBAAI,WAAU;;4BAA6B;4BAAE;;;;;;;;;;;;;0BAGhD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,OAAO,GAAG,WAAW,CAAC,CAAC;oBAAC;;;;;;;;;;;;;;;;;AAK3C"}},
    {"offset": {"line": 1150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1156, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aakansh/Documents/Git/Digisoul-Dashboard/components/wallet-value.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { ethers, BrowserProvider } from 'ethers'; // Make sure you import ethers here correctly\n\ninterface WalletValueProps {\n  connectedWallets: number;\n}\n\nexport function WalletValue({ connectedWallets }: WalletValueProps) {\n  const [account, setAccount] = useState<string | null>(null); // Store the MetaMask account\n  const [walletBalance, setWalletBalance] = useState<number>(0); // Store wallet balance\n\n  useEffect(() => {\n    const connectWallet = async () => {\n      if (typeof window !== 'undefined' && window.ethereum) {\n        try {\n          // Create a provider from MetaMask's injected provider\n          const provider = new BrowserProvider(window.ethereum);\n\n          // Request user's MetaMask account\n          const accounts = await provider.send('eth_requestAccounts', []);\n          setAccount(accounts[0]);\n\n          // Fetch wallet balance\n          const balance = await provider.getBalance(accounts[0]);\n          const balanceInEth = parseFloat(ethers.formatEther(balance)); // Corrected usage\n          setWalletBalance(balanceInEth);\n        } catch (error) {\n          console.error('Error connecting to MetaMask or fetching data:', error);\n        }\n      } else {\n        alert('MetaMask not detected!');\n      }\n    };\n\n    connectWallet();\n  }, []);\n\n  if (!account) {\n    return <div>Please connect your MetaMask wallet!</div>;\n  }\n\n  return (\n    <div className=\"rounded-2xl bg-[#060709] p-6\" id=\"myClasses\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-medium\">Wallet Value</h3>\n        <button className=\"text-gray-400 hover:text-gray-300\">\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n\n      <div className=\"text-3xl font-bold mb-2\">\n        {walletBalance.toLocaleString('en-US', { minimumFractionDigits: 2 })} ETH\n      </div>\n\n      <div className=\"flex items-center gap-2 text-sm text-blue-400\">\n        <span>{connectedWallets} WALLETS CONNECTED</span>\n        <div className=\"flex -space-x-2\">\n          {Array.from({ length: connectedWallets }).map((_, i) => (\n            <div\n              key={i}\n              className=\"w-6 h-6 rounded-full bg-gray-700 border-2 border-[#14151f]\"\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;;AASO,SAAS,YAAY,EAAE,gBAAgB,EAAoB;IAChE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,OAAO,6BAA6B;IAC1F,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,IAAI,uBAAuB;IAEtF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,uCAAsD;;YAgBtD,OAAO;gBACL,MAAM;YACR;QACF;QAEA;IACF,GAAG,EAAE;IAEL,IAAI,CAAC,SAAS;QACZ,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC;QAAI,WAAU;QAA+B,IAAG;;0BAC/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsB;;;;;;kCACpC,8OAAC;wBAAO,WAAU;kCAChB,cAAA,8OAAC;4BAAI,WAAU;4BAAU,MAAK;4BAAO,QAAO;4BAAe,SAAQ;sCACjE,cAAA,8OAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;0BAK3E,8OAAC;gBAAI,WAAU;;oBACZ,cAAc,cAAc,CAAC,SAAS;wBAAE,uBAAuB;oBAAE;oBAAG;;;;;;;0BAGvE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;4BAAM;4BAAiB;;;;;;;kCACxB,8OAAC;wBAAI,WAAU;kCACZ,MAAM,IAAI,CAAC;4BAAE,QAAQ;wBAAiB,GAAG,GAAG,CAAC,CAAC,GAAG,kBAChD,8OAAC;gCAEC,WAAU;+BADL;;;;;;;;;;;;;;;;;;;;;;AAQnB"}},
    {"offset": {"line": 1290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1300, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aakansh/Documents/Git/Digisoul-Dashboard/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1314, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1319, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aakansh/Documents/Git/Digisoul-Dashboard/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 1321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1326, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Aakansh/Documents/Git/Digisoul-Dashboard/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 1328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}