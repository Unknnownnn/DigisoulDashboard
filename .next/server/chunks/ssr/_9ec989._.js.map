{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/kuchbhi-master/components/dashboard-profile.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface DashboardProfileProps {\n    name: string\n    walletId: string\n    solidPoints: number\n    multiplier: number\n    avatarUrl: string\n  }\n  \n  export function DashboardProfile({ \n    name, \n    walletId, \n    solidPoints, \n    multiplier, \n    avatarUrl \n  }: DashboardProfileProps) {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedName, setEditedName] = useState(name);\n\n    const handleEditProfile = () => {\n      if (isEditing) {\n        // Save the changes\n        // Here you would typically make an API call to update the profile\n        setIsEditing(false);\n      } else {\n        setIsEditing(true);\n      }\n    };\n\n    const copyWalletId = async () => {\n      try {\n        await navigator.clipboard.writeText(walletId);\n        // You could add a toast notification here\n        alert('Wallet ID copied to clipboard!');\n      } catch (err) {\n        console.error('Failed to copy wallet ID:', err);\n      }\n    };\n\n    return (\n      <div className=\"rounded-2xl bg-[#060709] p-6\" id='myClasses'>\n        <div className=\"flex items-start justify-between mb-6\">\n          <div className=\"relative\">\n            <img\n              src={avatarUrl}\n              alt=\"Profile\"\n              className=\"w-24 h-24 rounded-full\"\n            />\n          </div>\n          <button \n            className={`px-4 py-2 text-sm ${\n              isEditing \n                ? 'bg-green-500/20 text-green-500' \n                : 'bg-[#1c1d29] hover:bg-[#2a2b3d]'\n            } rounded-lg transition-colors`}\n            onClick={handleEditProfile}\n          >\n            {isEditing ? 'Save profile' : 'Edit profile'}\n          </button>\n        </div>\n        \n        <div className=\"space-y-4\" >\n          <div>\n            {isEditing ? (\n              <input\n                type=\"text\"\n                value={editedName}\n                onChange={(e) => setEditedName(e.target.value)}\n                className=\"text-2xl font-bold bg-[#1c1d29] rounded px-2 py-1 w-full\"\n              />\n            ) : (\n              <h2 className=\"text-2xl font-bold\">{editedName}</h2>\n            )}\n            <p className=\"text-gray-400 flex items-center gap-2\">\n              {walletId}\n              <button \n                className=\"hover:text-gray-300\"\n                onClick={copyWalletId}\n                title=\"Copy wallet ID\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                </svg>\n              </button>\n            </p>\n          </div>\n          \n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-yellow-500\">★</span>\n              <span>Soul Points</span>\n              <span className=\"font-bold\">{solidPoints}</span>\n            </div>\n            <div className=\"flex items-center gap-2 text-blue-400\">\n              <span>Multiplier</span>\n              <span className=\"font-bold\">{multiplier}x</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  \n  "],"names":[],"mappings":";;;;AAAA;;;AAUS,SAAS,iBAAiB,EAC/B,IAAI,EACJ,QAAQ,EACR,WAAW,EACX,UAAU,EACV,SAAS,EACa;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,oBAAoB;QACxB,IAAI,WAAW;YACb,mBAAmB;YACnB,kEAAkE;YAClE,aAAa;QACf,OAAO;YACL,aAAa;QACf;IACF;IAEA,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;YACpC,0CAA0C;YAC1C,MAAM;QACR,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;QAA+B,IAAG;;0BAC/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,KAAK;4BACL,KAAI;4BACJ,WAAU;;;;;;;;;;;kCAGd,8OAAC;wBACC,WAAW,CAAC,kBAAkB,EAC5B,YACI,mCACA,kCACL,6BAA6B,CAAC;wBAC/B,SAAS;kCAER,YAAY,iBAAiB;;;;;;;;;;;;0BAIlC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;4BACE,0BACC,8OAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;gCAC7C,WAAU;;;;;qDAGZ,8OAAC;gCAAG,WAAU;0CAAsB;;;;;;0CAEtC,8OAAC;gCAAE,WAAU;;oCACV;kDACD,8OAAC;wCACC,WAAU;wCACV,SAAS;wCACT,OAAM;kDAEN,cAAA,8OAAC;4CAAI,WAAU;4CAAU,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDACjE,cAAA,8OAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM7E,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDAAkB;;;;;;kDAClC,8OAAC;kDAAK;;;;;;kDACN,8OAAC;wCAAK,WAAU;kDAAa;;;;;;;;;;;;0CAE/B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDAAK;;;;;;kDACN,8OAAC;wCAAK,WAAU;;4CAAa;4CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMpD"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file://E%3A/kuchbhi-master/components/dasboard-tabs.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardTabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardTabs() from the server but DashboardTabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dasboard-tabs.tsx <module evaluation>\",\n    \"DashboardTabs\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file://E%3A/kuchbhi-master/components/dasboard-tabs.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardTabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardTabs() from the server but DashboardTabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dasboard-tabs.tsx\",\n    \"DashboardTabs\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file://E%3A/kuchbhi-master/components/solid-score.tsx"],"sourcesContent":["interface SolidScoreProps {\n    score: number\n    maxScore: number\n    increase: number\n  }\n  \n  export function SolidScore({ score, maxScore, increase }: SolidScoreProps) {\n    const percentage = (score / maxScore) * 100\n  \n    return (\n      <div className=\"rounded-2xl bg-[#060709] p-6\" id='myClasses'>\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-medium\">Soul Score</h3>\n          <button className=\"text-gray-400 hover:text-gray-300\">\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </button>\n        </div>\n        \n        <div className=\"flex items-end gap-4 mb-4\">\n          <div className=\"text-5xl font-bold text-[#22c55e]\">{score}</div>\n          <div className=\"text-green-500 mb-2\">+{increase}↑</div>\n        </div>\n        \n        <div className=\"relative h-2 bg-[#1c1d29] rounded-full overflow-hidden\">\n          <div \n            className=\"absolute left-0 top-0 h-full bg-[#22c55e] transition-all duration-500\"\n            style={{ width: `${percentage}%` }}\n          />\n        </div>\n        \n        <div className=\"mt-2 text-right text-sm text-gray-400\">\n          {maxScore}\n        </div>\n      </div>\n    )\n  }\n  \n  "],"names":[],"mappings":";;;;;AAMS,SAAS,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAmB;IACvE,MAAM,aAAa,AAAC,QAAQ,WAAY;IAExC,qBACE,8OAAC;QAAI,WAAU;QAA+B,IAAG;;0BAC/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsB;;;;;;kCACpC,8OAAC;wBAAO,WAAU;kCAChB,cAAA,8OAAC;4BAAI,WAAU;4BAAU,MAAK;4BAAO,QAAO;4BAAe,SAAQ;sCACjE,cAAA,8OAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;0BAK3E,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAqC;;;;;;kCACpD,8OAAC;wBAAI,WAAU;;4BAAsB;4BAAE;4BAAS;;;;;;;;;;;;;0BAGlD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,OAAO,GAAG,WAAW,CAAC,CAAC;oBAAC;;;;;;;;;;;0BAIrC,8OAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file://E%3A/kuchbhi-master/components/wallet-value.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const WalletValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call WalletValue() from the server but WalletValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/wallet-value.tsx <module evaluation>\",\n    \"WalletValue\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA"}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file://E%3A/kuchbhi-master/components/wallet-value.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const WalletValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call WalletValue() from the server but WalletValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/wallet-value.tsx\",\n    \"WalletValue\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA"}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file://E%3A/kuchbhi-master/app/page.tsx"],"sourcesContent":["import { DashboardProfile } from '@/components/dashboard-profile'\nimport { DashboardTabs } from '@/components/dasboard-tabs'\nimport { SolidScore } from '@/components/solid-score'\nimport { WalletValue } from '@/components/wallet-value'\n\nexport default function DashboardPage() {\n  return (\n    <main className=\"min-h-screen bg-[#000000] text-white p-6\">\n      <div className=\"max-w-6xl mx-auto space-y-6\">\n        <div className=\"grid gap-6 md:grid-cols-2\">\n          <DashboardProfile \n            name=\"UnknownUser\"\n            walletId=\"0xCa...6C25\"\n            solidPoints={7000}\n            multiplier={2.4}\n            avatarUrl=\"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/image-8Cb4HKucjsHbzMaVe7XbGiNqLIRyji.png\"\n          />\n          <div className=\"space-y-6\">\n            <SolidScore score={360} maxScore={800} increase={32} />\n            <WalletValue value={5719.24} connectedWallets={3} />\n          </div>\n        </div>\n        <DashboardTabs />\n      </div>\n    </main>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,mIAAA,CAAA,mBAAgB;4BACf,MAAK;4BACL,UAAS;4BACT,aAAa;4BACb,YAAY;4BACZ,WAAU;;;;;;sCAEZ,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,6HAAA,CAAA,aAAU;oCAAC,OAAO;oCAAK,UAAU;oCAAK,UAAU;;;;;;8CACjD,8OAAC,8HAAA,CAAA,cAAW;oCAAC,OAAO;oCAAS,kBAAkB;;;;;;;;;;;;;;;;;;8BAGnD,8OAAC,+HAAA,CAAA,gBAAa;;;;;;;;;;;;;;;;AAItB"}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file://E%3A/kuchbhi-master/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACNC,UAAU;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,GAAY,GAAA;iBACZC,MAAAA,IAAU,IAAA;wBAAA;4BACVC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,EAAE,eAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACAC,MAAU,CAAA,YAAA,CAAA;;qBACRC,YAAYnB;aACd;QACF,CAAE;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}